{"ast":null,"code":"var _jsxFileName = \"C:\\\\forgetech\\\\frontend\\\\src\\\\Cart.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\"; // import axios from \"axios\";\n\nimport Novicedetails from \"./Novicedetails\";\nimport { Row, Col } from \"react-bootstrap\";\nimport Navbar from \"./Navbar\";\nimport { useCookies } from \"react-cookie\";\nimport Cartnproduct from \"./Cartnproduct\"; // import Button from 'react-bootstrap/Button'\n\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar CryptoJS = require(\"crypto-js\");\n\nconst Cart = () => {\n  _s();\n\n  const [nproducts, setnproducts] = useState([]);\n  var total = 0;\n  const [cookies] = useCookies(\"user\");\n  var bytes = CryptoJS.AES.decrypt(cookies.user, \"my-secret-key@123\");\n  var decryptedData = JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\n  const user = decryptedData.email;\n  useEffect(() => {\n    const fetchProducts = async () => {\n      const res = await fetch(\"http://localhost:8080/cart\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          user\n        })\n      });\n      const d = await res.json();\n      console.log(d.user.cart);\n      const data = d.user.cart; // console.log(data);\n\n      setnproducts(data);\n    };\n\n    fetchProducts();\n  }, []);\n\n  function getTotal() {\n    for (var i = 0; i < nproducts.length; i++) {\n      total += nproducts[i].price;\n    }\n\n    console.log(total);\n    return true;\n  }\n\n  if (nproducts && getTotal()) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: nproducts.map((nproduct, i) => /*#__PURE__*/_jsxDEV(Col, {\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(Cartnproduct, {\n            nproduct: nproduct\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/shipping\",\n        className: \"btn btn-warning\",\n        children: [\" \", \"Move to Shipping : Your Total Payable is \", total]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(Cart, \"yeSCVZkQhD9cFeWK7pzKDn3UW6I=\", false, function () {\n  return [useCookies];\n});\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"names":["React","useState","useEffect","Novicedetails","Row","Col","Navbar","useCookies","Cartnproduct","Link","CryptoJS","require","Cart","nproducts","setnproducts","total","cookies","bytes","AES","decrypt","user","decryptedData","JSON","parse","toString","enc","Utf8","email","fetchProducts","res","fetch","method","headers","body","stringify","d","json","console","log","cart","data","getTotal","i","length","price","map","nproduct"],"sources":["C:/forgetech/frontend/src/Cart.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\nimport Novicedetails from \"./Novicedetails\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport Navbar from \"./Navbar\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport Cartnproduct from \"./Cartnproduct\";\r\n// import Button from 'react-bootstrap/Button'\r\nimport { Link } from 'react-router-dom'\r\nvar CryptoJS = require(\"crypto-js\");\r\n\r\n\r\nconst Cart = () => {\r\n  const [nproducts, setnproducts] = useState([]);\r\n  var total = 0; \r\n  const [cookies] = useCookies(\"user\");\r\n  var bytes = CryptoJS.AES.decrypt(cookies.user, \"my-secret-key@123\");\r\n  var decryptedData = JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\r\n  const user = decryptedData.email;\r\n\r\n  useEffect(() => {\r\n    const fetchProducts = async () => {\r\n      const res = await fetch(\"http://localhost:8080/cart\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          user,\r\n        }),\r\n      });\r\n\r\n      const d = await res.json();\r\n      console.log(d.user.cart);\r\n      const data = d.user.cart;\r\n      // console.log(data);\r\n      setnproducts(data);\r\n    };\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  function getTotal() {\r\n    for(var i = 0; i < nproducts.length; i++) {\r\n      total+=nproducts[i].price\r\n    }\r\n    console.log(total);\r\n    return true\r\n  }\r\n\r\n  if (nproducts && getTotal()) {\r\n    return (\r\n      <>\r\n        <Navbar />\r\n        <Row>\r\n        \r\n          {nproducts.map((nproduct, i) => (\r\n            <Col key={i} md={3}>\r\n              <Cartnproduct nproduct={nproduct} />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n        <Link to=\"/shipping\" className=\"btn btn-warning\">\r\n        {\" \"}\r\n\r\n        Move to Shipping : Your Total Payable is {total}\r\n      </Link>\r\n      </>\r\n    );\r\n  }\r\n  else {\r\n    return (\r\n      <div>\r\n        Loading!\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nexport default Cart;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}